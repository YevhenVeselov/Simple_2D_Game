{"version":3,"sources":["main.js"],"names":["window","addEventListener","canvas","document","getElementById","ctx","getContext","width","height","InputHandler","game","e","key","keys","indexOf","player","shootTop","debug","push","splice","Projectile","x","y","speed","markedForDeletion","image","context","drawImage","Particle","frameX","Math","floor","random","frameY","spriteSize","sizeModifier","toFixed","size","speedX","speedY","gravity","angel","va","bounced","bottomBounceBondary","save","translate","rotate","restore","Player","maxFrame","maxSpeed","projectiles","powerUp","powerUpTimer","powerUpLimit","deltaTime","includes","forEach","projectile","update","filter","ammo","strokeRect","draw","shootBottom","maxAmmo","Enemy","font","fillText","lives","Angler1","score","Angler2","LuckyFish","type","HiveWhale","Drone","Layer","speedModifier","Background","image1","image2","image3","image4","layer1","layer2","layer3","layer4","layers","layer","Explosion","spriteWidth","spriteHeight","fps","timer","interval","SmokeExplosion","FireExplosion","UI","fontSize","fontFamily","color","fillStyle","shadowOffsetX","shadowOffsetY","shadowColor","formattedTime","message1","message2","gameTimer","gameOver","textAlign","winningScore","i","fillRect","background","input","ui","enemies","particles","explotions","enemyTimer","enemyInterval","ammoTimer","ammoInterval","timeLimit","particle","explotion","enemy","checkCollision","addExplosion","enterPowerUp","addEnemy","randomize","rect1","rect2","lastTime","animate","timeStamp","clearRect","global","requestAnimationFrame"],"mappings":";;AAEA,IAAA,EAAA,UAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,IAAA,OAAA,WAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,MAAA,YAAA,EAAA,QAAA,UAAA,EAAA,UAAA,QAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,IAAA,GAAA,oBAAA,UAAA,QAAA,UAAA,OAAA,EAAA,GAAA,QAAA,UAAA,KAAA,OAAA,EAAA,GAAA,mBAAA,MAAA,OAAA,EAAA,IAAA,OAAA,KAAA,UAAA,SAAA,KAAA,QAAA,UAAA,KAAA,GAAA,gBAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAAA,OAAOC,iBAAiB,OAAQ,WAExBC,IAAAA,EAASC,SAASC,eAAe,WACjCC,EAAMH,EAAOI,WAAW,MAE9BJ,EAAOK,MAAQ,IACfL,EAAOM,OAAS,IAEVC,IAAAA,EACJ,EAAA,SAAYC,EAAAA,GAAM,IAAA,EAAA,KAAA,EAAA,KAAA,GACXA,KAAAA,KAAOA,EAEZV,OAAOC,iBAAiB,UAAW,SAAAU,GACjB,YAAVA,EAAEC,KACQ,cAAVD,EAAEC,MACgC,IAAnC,EAAKF,KAAKG,KAAKC,QAAQH,EAAEC,KAET,MAAVD,EAAEC,IACX,EAAKF,KAAKK,OAAOC,WACE,MAAVL,EAAEC,MACX,EAAKF,KAAKO,OAAS,EAAKP,KAAKO,OAJ7B,EAAKP,KAAKG,KAAKK,KAAKP,EAAEC,OAQ1BZ,OAAOC,iBAAiB,QAAS,SAAAU,GAC3B,EAAKD,KAAKG,KAAKC,QAAQH,EAAEC,MAAQ,GACnC,EAAKF,KAAKG,KAAKM,OAAO,EAAKT,KAAKG,KAAKC,QAAQH,EAAEC,KAAM,OAMvDQ,EAhCmC,WAiC3BV,SAAAA,EAAAA,EAAMW,EAAGC,GAAG,EAAA,KAAA,GACjBZ,KAAAA,KAAOA,EACPW,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,EACJf,KAAAA,MAAQ,GACRC,KAAAA,OAAS,EACTe,KAAAA,MAAQ,EACRC,KAAAA,mBAAoB,EACpBC,KAAAA,MAAQtB,SAASC,eAAe,cAzCA,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SA4CvC,MAAA,WACOiB,KAAAA,GAAK,KAAKE,MAEX,KAAKF,EAAsB,GAAlB,KAAKX,KAAKH,QAChBiB,KAAAA,mBAAoB,KAhDU,CAAA,IAAA,OAoDvC,MAAA,SAAKE,GACHA,EAAQC,UAAU,KAAKF,MAAO,KAAKJ,EAAG,KAAKC,OArDN,EAAA,GAyDnCM,EAzDmC,WA0D3BlB,SAAAA,EAAAA,EAAMW,EAAGC,GAAG,EAAA,KAAA,GACjBZ,KAAAA,KAAOA,EACPW,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,EACJG,KAAAA,MAAQtB,SAASC,eAAe,SAChCyB,KAAAA,OAASC,KAAKC,MAAsB,EAAhBD,KAAKE,UACzBC,KAAAA,OAASH,KAAKC,MAAsB,EAAhBD,KAAKE,UACzBE,KAAAA,WAAa,GACbC,KAAAA,cAAgC,GAAhBL,KAAKE,SAAiB,IAAKI,QAAQ,GACnDC,KAAAA,KAAO,KAAKH,WAAa,KAAKC,aAC9BG,KAAAA,OAAyB,EAAhBR,KAAKE,SAAe,EAC7BO,KAAAA,QAA0B,GAAjBT,KAAKE,SACdQ,KAAAA,QAAU,GACVhB,KAAAA,mBAAoB,EACpBiB,KAAAA,MAAQ,EACRC,KAAAA,GAAqB,GAAhBZ,KAAKE,SAAiB,GAC3BW,KAAAA,QAAU,EACVC,KAAAA,oBAAsC,GAAhBd,KAAKE,SAAgB,GA3EX,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SA8EvC,MAAA,WACOS,KAAAA,OAAS,KAAKC,GACdH,KAAAA,QAAU,KAAKC,QACfnB,KAAAA,GAAK,KAAKiB,OAAS,KAAK5B,KAAKa,MAC7BD,KAAAA,GAAK,KAAKiB,QAEX,KAAKjB,EAAI,KAAKZ,KAAKF,OAAS,KAAK6B,MAAQ,KAAKhB,EAAI,EAAI,KAAKgB,QACxDb,KAAAA,mBAAoB,GAGvB,KAAKF,EAAI,KAAKZ,KAAKF,OAAS,KAAKoC,qBAChC,KAAKD,QAAU,IACbA,KAAAA,UACAJ,KAAAA,SAAW,MA3FmB,CAAA,IAAA,OA+FvC,MAAA,SAAKb,GACHA,EAAQmB,OACRnB,EAAQoB,UAAU,KAAKzB,EAAG,KAAKC,GAC/BI,EAAQqB,OAAO,KAAKN,OAEpBf,EAAQC,UAAU,KAAKF,MAAO,KAAKI,OAAS,KAAKK,WAC/C,KAAKD,OAAS,KAAKC,WAAY,KAAKA,WAAY,KAAKA,YACxC,GAAb,KAAKG,MAA0B,GAAb,KAAKA,KAAa,KAAKA,KAAM,KAAKA,MACtDX,EAAQsB,cAvG6B,EAAA,GA2GnCC,EA3GmC,WA4G3BvC,SAAAA,EAAAA,GAAM,EAAA,KAAA,GACXA,KAAAA,KAAOA,EACPH,KAAAA,MAAQ,IACRC,KAAAA,OAAS,IACTa,KAAAA,EAAI,GACJC,KAAAA,EAAI,IACJO,KAAAA,OAAS,EACTI,KAAAA,OAAS,EACTiB,KAAAA,SAAW,GACXX,KAAAA,OAAS,EACTY,KAAAA,SAAW,EACXC,KAAAA,YAAc,GACd3B,KAAAA,MAAQtB,SAASC,eAAe,UAChCiD,KAAAA,SAAU,EACVC,KAAAA,aAAe,EACfC,KAAAA,aAAe,IA3HiB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SA8HvC,MAAA,SAAOC,GACD,KAAK9C,KAAKG,KAAK4C,SAAS,WACrBlB,KAAAA,QAAU,KAAKY,SACX,KAAKzC,KAAKG,KAAK4C,SAAS,aAC5BlB,KAAAA,OAAS,KAAKY,SAEdZ,KAAAA,OAAS,EAEXjB,KAAAA,GAAK,KAAKiB,OAGX,KAAKjB,EAAI,KAAKZ,KAAKF,OAAuB,GAAd,KAAKA,OAC9Bc,KAAAA,EAAI,KAAKZ,KAAKF,OAAuB,GAAd,KAAKA,OACxB,KAAKc,EAAmB,IAAd,KAAKd,SACnBc,KAAAA,EAAmB,IAAd,KAAKd,QAIZ4C,KAAAA,YAAYM,QAAQ,SAAAC,GACvBA,EAAWC,WAGRR,KAAAA,YAAc,KAAKA,YAAYS,OAAO,SAAAF,GACzC,OAACA,EAAWnC,oBAGV,KAAKK,OAAS,KAAKqB,SAChBrB,KAAAA,SAEAA,KAAAA,OAAS,EAIZ,KAAKwB,UACH,KAAKC,aAAe,KAAKC,cACtBD,KAAAA,aAAe,EACfD,KAAAA,SAAU,EACVpB,KAAAA,OAAS,IAETqB,KAAAA,cAAgBE,EAChBvB,KAAAA,OAAS,EACTvB,KAAAA,KAAKoD,MAAQ,OAvKe,CAAA,IAAA,OA4KvC,MAAA,SAAKpC,GACC,KAAKhB,KAAKO,OACZS,EAAQqC,WAAW,KAAK1C,EAAG,KAAKC,EAAG,KAAKf,MAAO,KAAKC,QAGjD4C,KAAAA,YAAYM,QAAQ,SAAAC,GACvBA,EAAWK,KAAKtC,KAGlBA,EAAQC,UAAU,KAAKF,MAAO,KAAKI,OAAS,KAAKtB,MAC/C,KAAK0B,OAAS,KAAKzB,OAAQ,KAAKD,MAAO,KAAKC,OAC5C,KAAKa,EAAG,KAAKC,EAAG,KAAKf,MAAO,KAAKC,UAvLE,CAAA,IAAA,WA0LvC,MAAA,WACM,KAAKE,KAAKoD,KAAO,IACdV,KAAAA,YAAYlC,KAAK,IAAIE,EAAW,KAAKV,KACxC,KAAKW,EAAI,GAAI,KAAKC,EAAI,KACnBZ,KAAAA,KAAKoD,QAGR,KAAKT,SACFY,KAAAA,gBAlM8B,CAAA,IAAA,cAsMvC,MAAA,WACM,KAAKvD,KAAKoD,KAAO,GACdV,KAAAA,YAAYlC,KAAK,IAAIE,EAAW,KAAKV,KACxC,KAAKW,EAAI,GAAI,KAAKC,EAAI,QAzMW,CAAA,IAAA,eA6MvC,MAAA,WACOgC,KAAAA,aAAe,EACfD,KAAAA,SAAU,EAEX,KAAK3C,KAAKoD,KAAO,KAAKpD,KAAKwD,UACxBxD,KAAAA,KAAKoD,KAAO,KAAKpD,KAAKwD,aAlNQ,EAAA,GAuNnCC,EAvNmC,WAwN3BzD,SAAAA,EAAAA,GAAM,EAAA,KAAA,GACXA,KAAAA,KAAOA,EACPW,KAAAA,EAAI,KAAKX,KAAKH,MACd+B,KAAAA,QAA0B,IAAjBR,KAAKE,SAAkB,GAChCR,KAAAA,mBAAoB,EACpBK,KAAAA,OAAS,EACTI,KAAAA,OAAS,EACTiB,KAAAA,SAAW,GA/NqB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SAkOvC,MAAA,WACO7B,KAAAA,GAAK,KAAKiB,OAAS,KAAK5B,KAAKa,MAE9B,KAAKF,EAAI,KAAKd,MAAQ,IACnBiB,KAAAA,mBAAoB,GAIvB,KAAKK,OAAS,KAAKqB,SAChBrB,KAAAA,SAEAA,KAAAA,OAAS,IA7OqB,CAAA,IAAA,OAiPvC,MAAA,SAAKH,GACHA,EAAQ0C,KAAO,eAEX,KAAK1D,KAAKO,OACZS,EAAQqC,WAAW,KAAK1C,EAAG,KAAKC,EAAG,KAAKf,MAAO,KAAKC,QAGtDkB,EAAQC,UAAU,KAAKF,MAAO,KAAKI,OAAS,KAAKtB,MAC/C,KAAK0B,OAAS,KAAKzB,OAAQ,KAAKD,MAAO,KAAKC,OAC5C,KAAKa,EAAG,KAAKC,EAAG,KAAKf,MAAO,KAAKC,QAE/B,KAAKE,KAAKO,OACZS,EAAQ2C,SAAS,KAAKC,MAAO,KAAKjD,EAAG,KAAKC,OA7PP,EAAA,GAkQnCiD,EAlQmC,SAAA,GAAA,EAAA,EAkQnBJ,GAlQmB,IAAA,EAAA,EAAA,GAmQ3BzD,SAAAA,EAAAA,GAAM,IAAA,EAAA,OAAA,EAAA,KAAA,IACVA,EAAAA,EAAAA,KAAAA,KAAAA,IACDH,MAAQ,IACRC,EAAAA,OAAS,IACTc,EAAAA,EAAIQ,KAAKE,UAA+B,GAAnB,EAAKtB,KAAKF,OAAe,EAAKA,QACnDiB,EAAAA,MAAQtB,SAASC,eAAe,WAChC6B,EAAAA,OAASH,KAAKC,MAAsB,EAAhBD,KAAKE,UACzBsC,EAAAA,MAAQ,EACRE,EAAAA,MAAQ,EAAKF,MARF,EAnQqB,OAAA,EAAA,GAAA,GA+QnCG,EA/QmC,SAAA,GAAA,EAAA,EA+QnBN,GA/QmB,IAAA,EAAA,EAAA,GAgR3BzD,SAAAA,EAAAA,GAAM,IAAA,EAAA,OAAA,EAAA,KAAA,IACVA,EAAAA,EAAAA,KAAAA,KAAAA,IACDH,MAAQ,IACRC,EAAAA,OAAS,IACTc,EAAAA,EAAIQ,KAAKE,UAA+B,IAAnB,EAAKtB,KAAKF,OAAgB,EAAKA,QACpDiB,EAAAA,MAAQtB,SAASC,eAAe,WAChC6B,EAAAA,OAASH,KAAKC,MAAsB,EAAhBD,KAAKE,UACzBsC,EAAAA,MAAQ,EACRE,EAAAA,MAAQ,EAAKF,MARF,EAhRqB,OAAA,EAAA,GAAA,GA4RnCI,EA5RmC,SAAA,GAAA,EAAA,EA4RjBP,GA5RiB,IAAA,EAAA,EAAA,GA6R3BzD,SAAAA,EAAAA,GAAM,IAAA,EAAA,OAAA,EAAA,KAAA,IACVA,EAAAA,EAAAA,KAAAA,KAAAA,IACDH,MAAQ,GACRC,EAAAA,OAAS,GACTc,EAAAA,EAAIQ,KAAKE,UAA+B,IAAnB,EAAKtB,KAAKF,OAAgB,EAAKA,QACpDiB,EAAAA,MAAQtB,SAASC,eAAe,SAChC6B,EAAAA,OAASH,KAAKC,MAAsB,EAAhBD,KAAKE,UACzBsC,EAAAA,MAAQ,EACRE,EAAAA,MAAQ,GACRG,EAAAA,KAAO,QATI,EA7RqB,OAAA,EAAA,GAAA,GA0SnCC,EA1SmC,SAAA,GAAA,EAAA,EA0SjBT,GA1SiB,IAAA,EAAA,EAAA,GA2S3BzD,SAAAA,EAAAA,GAAM,IAAA,EAAA,OAAA,EAAA,KAAA,IACVA,EAAAA,EAAAA,KAAAA,KAAAA,IACDH,MAAQ,IACRC,EAAAA,OAAS,IACTc,EAAAA,EAAIQ,KAAKE,UAA+B,IAAnB,EAAKtB,KAAKF,OAAgB,EAAKA,QACpDiB,EAAAA,MAAQtB,SAASC,eAAe,aAChC6B,EAAAA,OAAS,EACTqC,EAAAA,MAAQ,GACRE,EAAAA,MAAQ,EAAKF,MACbK,EAAAA,KAAO,OACPrC,EAAAA,QAA0B,IAAjBR,KAAKE,SAAkB,GAVrB,EA3SqB,OAAA,EAAA,GAAA,GAyTnC6C,EAzTmC,SAAA,GAAA,EAAA,EAyTrBV,GAzTqB,IAAA,EAAA,EAAA,GA0T3BzD,SAAAA,EAAAA,EAAMW,EAAGC,GAAG,IAAA,EAAA,OAAA,EAAA,KAAA,IAChBZ,EAAAA,EAAAA,KAAAA,KAAAA,IACDH,MAAQ,IACRC,EAAAA,OAAS,GACTa,EAAAA,EAAIA,EACJC,EAAAA,EAAIA,EACJG,EAAAA,MAAQtB,SAASC,eAAe,SAChC6B,EAAAA,OAASH,KAAKC,MAAsB,EAAhBD,KAAKE,UACzBsC,EAAAA,MAAQ,EACRE,EAAAA,MAAQ,EAAKF,MACbK,EAAAA,KAAO,QACPrC,EAAAA,QAA0B,IAAjBR,KAAKE,SAAkB,GAXf,EA1Te,OAAA,EAAA,GAAA,GAyUnC8C,EAzUmC,WA0U3BpE,SAAAA,EAAAA,EAAMe,EAAOsD,GAAe,EAAA,KAAA,GACjCrE,KAAAA,KAAOA,EACPe,KAAAA,MAAQA,EACRsD,KAAAA,cAAgBA,EAChBxE,KAAAA,MAAQ,KACRC,KAAAA,OAAS,IACTa,KAAAA,EAAI,EACJC,KAAAA,EAAI,EAjV4B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SAoVvC,MAAA,WACM,KAAKD,IAAM,KAAKd,MACbc,KAAAA,EAAI,EAEJA,KAAAA,GAAK,KAAKX,KAAKa,MAAQ,KAAKwD,gBAxVE,CAAA,IAAA,OA4VvC,MAAA,SAAKrD,GACHA,EAAQC,UAAU,KAAKF,MAAO,KAAKJ,EAAG,KAAKC,GAC3CI,EAAQC,UAAU,KAAKF,MAAO,KAAKJ,EAAI,KAAKd,MAAO,KAAKe,OA9VnB,EAAA,GAkWnC0D,EAlWmC,WAmW3BtE,SAAAA,EAAAA,GAAM,EAAA,KAAA,GACXA,KAAAA,KAAOA,EACPuE,KAAAA,OAAS9E,SAASC,eAAe,UACjC8E,KAAAA,OAAS/E,SAASC,eAAe,UACjC+E,KAAAA,OAAShF,SAASC,eAAe,UACjCgF,KAAAA,OAASjF,SAASC,eAAe,UACjCiF,KAAAA,OAAS,IAAIP,EAAM,KAAKpE,KAAM,KAAKuE,OAAQ,IAC3CK,KAAAA,OAAS,IAAIR,EAAM,KAAKpE,KAAM,KAAKwE,OAAQ,IAC3CK,KAAAA,OAAS,IAAIT,EAAM,KAAKpE,KAAM,KAAKyE,OAAQ,GAC3CK,KAAAA,OAAS,IAAIV,EAAM,KAAKpE,KAAM,KAAK0E,OAAQ,KAC3CK,KAAAA,OAAS,CAAC,KAAKJ,OAAQ,KAAKC,OAAQ,KAAKC,QA7WT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SAgXvC,MAAA,WACOE,KAAAA,OAAO/B,QAAQ,SAAAgC,GAASA,OAAAA,EAAM9B,aAjXE,CAAA,IAAA,OAoXvC,MAAA,SAAKlC,GACE+D,KAAAA,OAAO/B,QAAQ,SAAAgC,GAASA,OAAAA,EAAM1B,KAAKtC,SArXH,EAAA,GAyXnCiE,EAzXmC,WA0X3BjF,SAAAA,EAAAA,EAAMW,EAAGC,GAAG,EAAA,KAAA,GACjBZ,KAAAA,KAAOA,EACPmB,KAAAA,OAAS,EACT+D,KAAAA,YAAc,IACdC,KAAAA,aAAe,IACftF,KAAAA,MAAQ,KAAKqF,YACbpF,KAAAA,OAAS,KAAKqF,aACdxE,KAAAA,EAAIA,EAAiB,GAAb,KAAKd,MACbe,KAAAA,EAAIA,EAAkB,GAAd,KAAKd,OACbsF,KAAAA,IAAM,GACNC,KAAAA,MAAQ,EACRC,KAAAA,SAAW,IAAO,KAAKF,IACvBtE,KAAAA,mBAAoB,EACpB0B,KAAAA,SAAW,EAvYqB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SA0YvC,MAAA,SAAOM,GACAnC,KAAAA,GAAK,KAAKX,KAAKa,MAEhB,KAAKwE,MAAQ,KAAKC,UACfnE,KAAAA,SACAkE,KAAAA,MAAQ,GAERA,KAAAA,OAASvC,EAGZ,KAAK3B,OAAS,KAAKqB,WAChB1B,KAAAA,mBAAoB,KArZU,CAAA,IAAA,OAyZvC,MAAA,SAAKE,GACHA,EAAQC,UAAU,KAAKF,MAAO,KAAKI,OAAS,KAAK+D,YAC/C,EAAG,KAAKA,YAAa,KAAKC,aAAc,KAAKxE,EAAG,KAAKC,EACrD,KAAKf,MAAO,KAAKC,YA5ZkB,EAAA,GAganCyF,EAhamC,SAAA,GAAA,EAAA,EAgaZN,GAhaY,IAAA,EAAA,EAAA,GAia3BjF,SAAAA,EAAAA,EAAMW,EAAGC,GAAG,IAAA,EAAA,OAAA,EAAA,KAAA,IAChBZ,EAAAA,EAAAA,KAAAA,KAAAA,EAAMW,EAAGC,IACVG,MAAQtB,SAASC,eAAe,kBAFf,EAjae,OAAA,EAAA,GAAA,GAuanC8F,EAvamC,SAAA,GAAA,EAAA,EAuabP,GAvaa,IAAA,EAAA,EAAA,GAwa3BjF,SAAAA,EAAAA,EAAMW,EAAGC,GAAG,IAAA,EAAA,OAAA,EAAA,KAAA,IAChBZ,EAAAA,EAAAA,KAAAA,KAAAA,EAAMW,EAAGC,IACVG,MAAQtB,SAASC,eAAe,iBAFf,EAxae,OAAA,EAAA,GAAA,GA8anC+F,EA9amC,WA+a3BzF,SAAAA,EAAAA,GAAM,EAAA,KAAA,GACXA,KAAAA,KAAOA,EACP0F,KAAAA,SAAW,GACXC,KAAAA,WAAa,UACbC,KAAAA,MAAQ,QAnbwB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OAsbvC,MAAA,SAAK5E,GACHA,EAAQmB,OACRnB,EAAQ6E,UAAY,KAAKD,MACzB5E,EAAQ8E,cAAgB,EACxB9E,EAAQ+E,cAAgB,EACxB/E,EAAQgF,YAAc,QACtBhF,EAAQ0C,KAAO,KAAKgC,SAAW,KAAO,KAAKC,WAG3C3E,EAAQ2C,SAAS,UAAY,KAAK3D,KAAK8D,MAAO,GAAI,IAG5CmC,IAQAC,EACAC,EATAF,GAAuC,KAAtB,KAAKjG,KAAKoG,WAAmB1E,QAAQ,IAE5DV,EAAQ2C,SAAS,UAAYsC,EAAe,GAAI,KAG5C,KAAKjG,KAAKqG,YACZrF,EAAQsF,UAAY,SAKhB,KAAKtG,KAAK8D,MAAQ,KAAK9D,KAAKuG,cAC9BL,EAAW,WACXC,EAAW,eAEXD,EAAW,YACXC,EAAW,wBAEbnF,EAAQ0C,KAAO,QAAU,KAAKiC,WAE9B3E,EAAQ2C,SAASuC,EAA4B,GAAlB,KAAKlG,KAAKH,MAChB,GAAnB,KAAKG,KAAKF,OAAe,IAC3BkB,EAAQ0C,KAAO,QAAU,KAAKiC,WAE9B3E,EAAQ2C,SAASwC,EAA4B,GAAlB,KAAKnG,KAAKH,MAChB,GAAnB,KAAKG,KAAKF,OAAe,KAIzB,KAAKE,KAAKK,OAAOsC,UACnB3B,EAAQ6E,UAAY,WAGjB,IAAA,IAAIW,EAAI,EAAGA,EAAI,KAAKxG,KAAKoD,KAAMoD,IAClCxF,EAAQyF,SAAS,GAAK,EAAID,EAAG,GAAI,EAAG,IAEtCxF,EAAQsB,cAte6B,EAAA,GAupBnCtC,EAAO,IAvpB4B,WA2e3BH,SAAAA,EAAAA,EAAOC,GAAQ,EAAA,KAAA,GACpBD,KAAAA,MAAQA,EACRC,KAAAA,OAASA,EACT4G,KAAAA,WAAa,IAAIpC,EAAW,MAC5BjE,KAAAA,OAAS,IAAIkC,EAAO,MACpBoE,KAAAA,MAAQ,IAAI5G,EAAa,MACzB6G,KAAAA,GAAK,IAAInB,EAAG,MACZtF,KAAAA,KAAO,GACP0G,KAAAA,QAAU,GACVC,KAAAA,UAAY,GACZC,KAAAA,WAAa,GACbC,KAAAA,WAAa,EACbC,KAAAA,cAAgB,IAChB7D,KAAAA,KAAO,GACPI,KAAAA,QAAU,GACV0D,KAAAA,UAAY,EACZC,KAAAA,aAAe,IACfd,KAAAA,UAAW,EACXvC,KAAAA,MAAQ,EACRyC,KAAAA,aAAe,IACfH,KAAAA,UAAY,EACZgB,KAAAA,UAAY,IACZvG,KAAAA,MAAQ,EACRN,KAAAA,OAAQ,EAlgBwB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SAqgBvC,MAAA,SAAOuC,GAAW,IAAA,EAAA,KACX,KAAKuD,WACHD,KAAAA,WAAatD,GAGhB,KAAKsD,UAAY,KAAKgB,YACnBf,KAAAA,UAAW,GAEbK,KAAAA,WAAWxD,SACXwD,KAAAA,WAAW5B,OAAO5B,SAClB7C,KAAAA,OAAO6C,OAAOJ,GAEf,KAAKoE,UAAY,KAAKC,cACpB,KAAK/D,KAAO,KAAKI,SACdJ,KAAAA,OAEF8D,KAAAA,UAAY,GAEZA,KAAAA,WAAapE,EAEfgE,KAAAA,UAAU9D,QAAQ,SAAAqE,GAAYA,OAAAA,EAASnE,WAEvC4D,KAAAA,UAAY,KAAKA,UAAU3D,OAAO,SAAAkE,GACrC,OAACA,EAASvG,oBACPiG,KAAAA,WAAW/D,QAAQ,SAAAsE,GAAaA,OAAAA,EAAUpE,OAAOJ,KAEjDiE,KAAAA,WAAa,KAAKA,WAAW5D,OAAO,SAAAmE,GACvC,OAACA,EAAUxG,oBAER+F,KAAAA,QAAQ7D,QAAQ,SAAAuE,GAGf,GAFJA,EAAMrE,SAEF,EAAKsE,eAAe,EAAKnH,OAAQkH,GAAQ,CAC3CA,EAAMzG,mBAAoB,EAC1B,EAAK2G,aAAaF,GAEb,IAAA,IAAIf,EAAI,EAAGA,EAAIe,EAAMzD,MAAO0C,IAC/B,EAAKM,UAAUtG,KAAK,IAAIU,EAAS,EAC/BqG,EAAM5G,EAAkB,GAAd4G,EAAM1H,MAAa0H,EAAM3G,EAAmB,EAAf2G,EAAMzH,OAAY,IAG1C,UAAfyH,EAAMtD,KACR,EAAK5D,OAAOqH,eACF,EAAKrB,UACf,EAAKvC,QAIT,EAAKzD,OAAOqC,YAAYM,QAAQ,SAAAC,GAC1B,GAAA,EAAKuE,eAAevE,EAAYsE,KAClCA,EAAM3D,QACNX,EAAWnC,mBAAoB,EAE/B,EAAKgG,UAAUtG,KAAK,IAAIU,EAAS,EAC/BqG,EAAM5G,EAAkB,GAAd4G,EAAM1H,MAAa0H,EAAM3G,EAAmB,EAAf2G,EAAMzH,OAAY,IAEvDyH,EAAM3D,OAAS,GAAG,CACf,IAAA,IAAI4C,EAAI,EAAGA,EAAIe,EAAMzD,MAAO0C,IAC/B,EAAKM,UAAUtG,KAAK,IAAIU,EAAS,EAC/BqG,EAAM5G,EAAkB,GAAd4G,EAAM1H,MAAa0H,EAAM3G,EAAmB,EAAf2G,EAAMzH,OAAY,IAKzDyH,GAHJA,EAAMzG,mBAAoB,EAC1B,EAAK2G,aAAaF,GAEC,SAAfA,EAAMtD,KACH,IAAA,IAAIuC,EAAI,EAAGA,EAAI,EAAGA,IACrB,EAAKK,QAAQrG,KAAK,IAAI2D,EAAM,EAC1BoD,EAAM5G,EAAIS,KAAKE,SAAWiG,EAAM1H,MAChC0H,EAAM3G,EAAIQ,KAAKE,SAAWiG,EAAMzH,OAAS,KAG/C,EAAKgE,OAASyD,EAAMzD,MAEf,EAAKuC,WACR,EAAKvC,OAASyD,EAAMzD,OAGlB,EAAKA,MAAQ,EAAKyC,eACpB,EAAKF,UAAW,QAOrBQ,KAAAA,QAAU,KAAKA,QAAQ1D,OAAO,SAAAoE,GACjC,OAACA,EAAMzG,oBAEL,KAAKkG,WAAa,KAAKC,gBAAkB,KAAKZ,UAC3CsB,KAAAA,WACAX,KAAAA,WAAa,GAEbA,KAAAA,YAAclE,IAjmBgB,CAAA,IAAA,OAqmBvC,MAAA,SAAK9B,GACE0F,KAAAA,WAAWpD,KAAKtC,GAChB4F,KAAAA,GAAGtD,KAAKtC,GACRX,KAAAA,OAAOiD,KAAKtC,GACZ8F,KAAAA,UAAU9D,QAAQ,SAAAqE,GAAYA,OAAAA,EAAS/D,KAAKtC,KAE5C6F,KAAAA,QAAQ7D,QAAQ,SAAAuE,GACnBA,EAAMjE,KAAKtC,KAGR+F,KAAAA,WAAW/D,QAAQ,SAAAsE,GACtBA,EAAUhE,KAAKtC,KAEZ0F,KAAAA,WAAW5B,OAAOxB,KAAKtC,KAlnBS,CAAA,IAAA,WAqnBvC,MAAA,WACQ4G,IAAAA,EAAYxG,KAAKE,SAEnBsG,EAAY,GACTf,KAAAA,QAAQrG,KAAK,IAAIqD,EAAQ,OACrB+D,EAAY,GAChBf,KAAAA,QAAQrG,KAAK,IAAIuD,EAAQ,OACrB6D,EAAY,GAChBf,KAAAA,QAAQrG,KAAK,IAAI0D,EAAU,OAE3B2C,KAAAA,QAAQrG,KAAK,IAAIwD,EAAU,SA/nBG,CAAA,IAAA,eAmoBvC,MAAA,SAAauD,GACOnG,KAAKE,SAEP,GACTyF,KAAAA,WAAWvG,KAAK,IAAI+E,EAAe,KACtCgC,EAAM5G,EAAkB,GAAd4G,EAAM1H,MAAa0H,EAAM3G,EAAmB,GAAf2G,EAAMzH,SAE1CiH,KAAAA,WAAWvG,KAAK,IAAIgF,EAAc,KACrC+B,EAAM5G,EAAkB,GAAd4G,EAAM1H,MAAa0H,EAAM3G,EAAmB,GAAf2G,EAAMzH,WA3oBZ,CAAA,IAAA,iBA+oBvC,MAAA,SAAe+H,EAAOC,GACZD,OAAAA,EAAMlH,EAAImH,EAAMnH,EAAImH,EAAMjI,OACvBgI,EAAMlH,EAAIkH,EAAMhI,MAAQiI,EAAMnH,GAC9BkH,EAAMjH,EAAIkH,EAAMlH,EAAIkH,EAAMhI,QAC1B+H,EAAMjH,EAAIiH,EAAM/H,OAASgI,EAAMlH,MAnpBL,EAAA,GAupB5B,CAASpB,EAAOK,MAAOL,EAAOM,QACvCiI,EAAW,GAGNC,SAAAA,EAAQC,GACTnF,IAAAA,EAAYmF,EAAYF,EAE9BA,EAAWE,EACXtI,EAAIuI,UAAU,EAAG,EAAG1I,EAAOK,MAAOL,EAAOM,QACzCE,EAAKkD,OAAOJ,GACZ9C,EAAKsD,KAAK3D,GACVwI,EAAOC,sBAAsBJ,GAE/BA,CAAQ","file":"main.f1af81a3.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nwindow.addEventListener('load', function() {\n// canvas setup\n  const canvas = document.getElementById('canvas1');\n  const ctx = canvas.getContext('2d');\n\n  canvas.width = 1000;\n  canvas.height = 500;\n\n  class InputHandler {\n    constructor(game) {\n      this.game = game;\n\n      window.addEventListener('keydown', e => {\n        if (((e.key === 'ArrowUp')\n          || (e.key === 'ArrowDown'))\n          && this.game.keys.indexOf(e.key) === -1) {\n          this.game.keys.push(e.key);\n        } else if (e.key === ' ') {\n          this.game.player.shootTop();\n        } else if (e.key === 'd') {\n          this.game.debug = !this.game.debug;\n        }\n      });\n\n      window.addEventListener('keyup', e => {\n        if (this.game.keys.indexOf(e.key) > -1) {\n          this.game.keys.splice(this.game.keys.indexOf(e.key), 1);\n        }\n      });\n    }\n  }\n\n  class Projectile {\n    constructor(game, x, y) {\n      this.game = game;\n      this.x = x;\n      this.y = y;\n      this.width = 10;\n      this.height = 3;\n      this.speed = 3;\n      this.markedForDeletion = false;\n      this.image = document.getElementById('projectile');\n    }\n\n    update() {\n      this.x += this.speed;\n\n      if (this.x > this.game.width * 0.8) {\n        this.markedForDeletion = true;\n      }\n    }\n\n    draw(context) {\n      context.drawImage(this.image, this.x, this.y);\n    }\n  }\n\n  class Particle {\n    constructor(game, x, y) {\n      this.game = game;\n      this.x = x;\n      this.y = y;\n      this.image = document.getElementById('gears');\n      this.frameX = Math.floor(Math.random() * 3);\n      this.frameY = Math.floor(Math.random() * 3);\n      this.spriteSize = 50;\n      this.sizeModifier = (Math.random() * 0.5 + 0.5).toFixed(1);\n      this.size = this.spriteSize * this.sizeModifier;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * -15;\n      this.gravity = 0.5;\n      this.markedForDeletion = false;\n      this.angel = 0;\n      this.va = Math.random() * 0.2 - 0.1;\n      this.bounced = 0;\n      this.bottomBounceBondary = Math.random() * 80 + 60;\n    }\n\n    update() {\n      this.angel += this.va;\n      this.speedY += this.gravity;\n      this.x -= this.speedX + this.game.speed;\n      this.y += this.speedY;\n\n      if (this.y > this.game.height + this.size || this.x < 0 - this.size) {\n        this.markedForDeletion = true;\n      }\n\n      if (this.y > this.game.height - this.bottomBounceBondary\n        && this.bounced < 5) {\n        this.bounced++;\n        this.speedY *= -0.7;\n      }\n    }\n\n    draw(context) {\n      context.save();\n      context.translate(this.x, this.y);\n      context.rotate(this.angel);\n\n      context.drawImage(this.image, this.frameX * this.spriteSize,\n        this.frameY * this.spriteSize, this.spriteSize, this.spriteSize,\n        this.size * -0.5, this.size * -0.5, this.size, this.size);\n      context.restore();\n    }\n  }\n\n  class Player {\n    constructor(game) {\n      this.game = game;\n      this.width = 120;\n      this.height = 190;\n      this.x = 20;\n      this.y = 100;\n      this.frameX = 0;\n      this.frameY = 0;\n      this.maxFrame = 37;\n      this.speedY = 0;\n      this.maxSpeed = 3;\n      this.projectiles = [];\n      this.image = document.getElementById('player');\n      this.powerUp = false;\n      this.powerUpTimer = 0;\n      this.powerUpLimit = 10000;\n    }\n\n    update(deltaTime) {\n      if (this.game.keys.includes('ArrowUp')) {\n        this.speedY = -this.maxSpeed;\n      } else if (this.game.keys.includes('ArrowDown')) {\n        this.speedY = this.maxSpeed;\n      } else {\n        this.speedY = 0;\n      }\n      this.y += this.speedY;\n\n      // vertical bondaries\n      if (this.y > this.game.height - this.height * 0.5) {\n        this.y = this.game.height - this.height * 0.5;\n      } else if (this.y < -this.height * 0.5) {\n        this.y = -this.height * 0.5;\n      }\n\n      // handle projectiles\n      this.projectiles.forEach(projectile => {\n        projectile.update();\n      });\n\n      this.projectiles = this.projectiles.filter(projectile =>\n        !projectile.markedForDeletion);\n\n      // sprite animation\n      if (this.frameX < this.maxFrame) {\n        this.frameX++;\n      } else {\n        this.frameX = 0;\n      }\n\n      // power up\n      if (this.powerUp) {\n        if (this.powerUpTimer > this.powerUpLimit) {\n          this.powerUpTimer = 0;\n          this.powerUp = false;\n          this.frameY = 0;\n        } else {\n          this.powerUpTimer += deltaTime;\n          this.frameY = 1;\n          this.game.ammo += 0.1;\n        }\n      }\n    }\n\n    draw(context) {\n      if (this.game.debug) {\n        context.strokeRect(this.x, this.y, this.width, this.height);\n      }\n\n      this.projectiles.forEach(projectile => {\n        projectile.draw(context);\n      });\n\n      context.drawImage(this.image, this.frameX * this.width,\n        this.frameY * this.height, this.width, this.height,\n        this.x, this.y, this.width, this.height);\n    }\n\n    shootTop() {\n      if (this.game.ammo > 0) {\n        this.projectiles.push(new Projectile(this.game,\n          this.x + 80, this.y + 30));\n        this.game.ammo--;\n      }\n\n      if (this.powerUp) {\n        this.shootBottom();\n      }\n    }\n\n    shootBottom() {\n      if (this.game.ammo > 0) {\n        this.projectiles.push(new Projectile(this.game,\n          this.x + 80, this.y + 175));\n      }\n    }\n\n    enterPowerUp() {\n      this.powerUpTimer = 0;\n      this.powerUp = true;\n\n      if (this.game.ammo < this.game.maxAmmo) {\n        this.game.ammo = this.game.maxAmmo;\n      }\n    }\n  }\n\n  class Enemy {\n    constructor(game) {\n      this.game = game;\n      this.x = this.game.width;\n      this.speedX = Math.random() * -1.5 - 0.5;\n      this.markedForDeletion = false;\n      this.frameX = 0;\n      this.frameY = 0;\n      this.maxFrame = 37;\n    }\n\n    update() {\n      this.x += this.speedX - this.game.speed;\n\n      if (this.x + this.width < 0) {\n        this.markedForDeletion = true;\n      }\n\n      // sprite animation\n      if (this.frameX < this.maxFrame) {\n        this.frameX++;\n      } else {\n        this.frameX = 0;\n      }\n    }\n\n    draw(context) {\n      context.font = '20px Bangers';\n\n      if (this.game.debug) {\n        context.strokeRect(this.x, this.y, this.width, this.height);\n      }\n\n      context.drawImage(this.image, this.frameX * this.width,\n        this.frameY * this.height, this.width, this.height,\n        this.x, this.y, this.width, this.height);\n\n      if (this.game.debug) {\n        context.fillText(this.lives, this.x, this.y);\n      }\n    }\n  }\n\n  class Angler1 extends Enemy {\n    constructor(game) {\n      super(game);\n      this.width = 228;\n      this.height = 169;\n      this.y = Math.random() * (this.game.height * 0.9 - this.height);\n      this.image = document.getElementById('angler1');\n      this.frameY = Math.floor(Math.random() * 3);\n      this.lives = 5;\n      this.score = this.lives;\n    }\n  }\n\n  class Angler2 extends Enemy {\n    constructor(game) {\n      super(game);\n      this.width = 213;\n      this.height = 165;\n      this.y = Math.random() * (this.game.height * 0.95 - this.height);\n      this.image = document.getElementById('angler2');\n      this.frameY = Math.floor(Math.random() * 2);\n      this.lives = 6;\n      this.score = this.lives;\n    }\n  }\n\n  class LuckyFish extends Enemy {\n    constructor(game) {\n      super(game);\n      this.width = 99;\n      this.height = 95;\n      this.y = Math.random() * (this.game.height * 0.95 - this.height);\n      this.image = document.getElementById('lucky');\n      this.frameY = Math.floor(Math.random() * 2);\n      this.lives = 5;\n      this.score = 15;\n      this.type = 'lucky';\n    }\n  }\n\n  class HiveWhale extends Enemy {\n    constructor(game) {\n      super(game);\n      this.width = 400;\n      this.height = 227;\n      this.y = Math.random() * (this.game.height * 0.95 - this.height);\n      this.image = document.getElementById('hivewhale');\n      this.frameY = 0;\n      this.lives = 20;\n      this.score = this.lives;\n      this.type = 'hive';\n      this.speedX = Math.random() * -1.2 - 0.2;\n    }\n  }\n\n  class Drone extends Enemy {\n    constructor(game, x, y) {\n      super(game);\n      this.width = 115;\n      this.height = 95;\n      this.x = x;\n      this.y = y;\n      this.image = document.getElementById('drone');\n      this.frameY = Math.floor(Math.random() * 2);\n      this.lives = 3;\n      this.score = this.lives;\n      this.type = 'drone';\n      this.speedX = Math.random() * -4.2 - 0.5;\n    }\n  }\n\n  class Layer {\n    constructor(game, image, speedModifier) {\n      this.game = game;\n      this.image = image;\n      this.speedModifier = speedModifier;\n      this.width = 1768;\n      this.height = 500;\n      this.x = 0;\n      this.y = 0;\n    }\n\n    update() {\n      if (this.x <= -this.width) {\n        this.x = 0;\n      } else {\n        this.x -= this.game.speed * this.speedModifier;\n      }\n    }\n\n    draw(context) {\n      context.drawImage(this.image, this.x, this.y);\n      context.drawImage(this.image, this.x + this.width, this.y);\n    }\n  }\n\n  class Background {\n    constructor(game) {\n      this.game = game;\n      this.image1 = document.getElementById('layer1');\n      this.image2 = document.getElementById('layer2');\n      this.image3 = document.getElementById('layer3');\n      this.image4 = document.getElementById('layer4');\n      this.layer1 = new Layer(this.game, this.image1, 0.2);\n      this.layer2 = new Layer(this.game, this.image2, 0.4);\n      this.layer3 = new Layer(this.game, this.image3, 1);\n      this.layer4 = new Layer(this.game, this.image4, 1.5);\n      this.layers = [this.layer1, this.layer2, this.layer3];\n    }\n\n    update() {\n      this.layers.forEach(layer => layer.update());\n    }\n\n    draw(context) {\n      this.layers.forEach(layer => layer.draw(context));\n    }\n  }\n\n  class Explosion {\n    constructor(game, x, y) {\n      this.game = game;\n      this.frameX = 0;\n      this.spriteWidth = 200;\n      this.spriteHeight = 200;\n      this.width = this.spriteWidth;\n      this.height = this.spriteHeight;\n      this.x = x - this.width * 0.5;\n      this.y = y - this.height * 0.5;\n      this.fps = 30;\n      this.timer = 0;\n      this.interval = 1000 / this.fps;\n      this.markedForDeletion = false;\n      this.maxFrame = 8;\n    }\n\n    update(deltaTime) {\n      this.x -= this.game.speed;\n\n      if (this.timer > this.interval) {\n        this.frameX++;\n        this.timer = 0;\n      } else {\n        this.timer += deltaTime;\n      }\n\n      if (this.frameX > this.maxFrame) {\n        this.markedForDeletion = true;\n      }\n    }\n\n    draw(context) {\n      context.drawImage(this.image, this.frameX * this.spriteWidth,\n        0, this.spriteWidth, this.spriteHeight, this.x, this.y,\n        this.width, this.height);\n    }\n  }\n\n  class SmokeExplosion extends Explosion {\n    constructor(game, x, y) {\n      super(game, x, y);\n      this.image = document.getElementById('smokeExplosion');\n    }\n  }\n\n  class FireExplosion extends Explosion {\n    constructor(game, x, y) {\n      super(game, x, y);\n      this.image = document.getElementById('fireExplosion');\n    }\n  }\n\n  class UI {\n    constructor(game) {\n      this.game = game;\n      this.fontSize = 25;\n      this.fontFamily = 'Bangers';\n      this.color = 'white';\n    }\n\n    draw(context) {\n      context.save();\n      context.fillStyle = this.color;\n      context.shadowOffsetX = 2;\n      context.shadowOffsetY = 2;\n      context.shadowColor = 'black';\n      context.font = this.fontSize + 'px' + this.fontFamily;\n\n      // score\n      context.fillText('Score: ' + this.game.score, 20, 40);\n\n      // timer\n      const formattedTime = (this.game.gameTimer * 0.001).toFixed(1);\n\n      context.fillText('Timer: ' + formattedTime, 20, 100);\n\n      // game over messages\n      if (this.game.gameOver) {\n        context.textAlign = 'center';\n\n        let message1;\n        let message2;\n\n        if (this.game.score > this.game.winningScore) {\n          message1 = 'You win!';\n          message2 = 'Well done!';\n        } else {\n          message1 = 'You lose!';\n          message2 = 'Try again next time!';\n        }\n        context.font = '80px ' + this.fontFamily;\n\n        context.fillText(message1, this.game.width * 0.5,\n          this.game.height * 0.5 - 20);\n        context.font = '25px ' + this.fontFamily;\n\n        context.fillText(message2, this.game.width * 0.5,\n          this.game.height * 0.5 + 20);\n      }\n\n      // ammo\n      if (this.game.player.powerUp) {\n        context.fillStyle = '#ffffbd';\n      }\n\n      for (let i = 0; i < this.game.ammo; i++) {\n        context.fillRect(20 + 5 * i, 50, 3, 20);\n      }\n      context.restore();\n    }\n  }\n\n  class Game {\n    constructor(width, height) {\n      this.width = width;\n      this.height = height;\n      this.background = new Background(this);\n      this.player = new Player(this);\n      this.input = new InputHandler(this);\n      this.ui = new UI(this);\n      this.keys = [];\n      this.enemies = [];\n      this.particles = [];\n      this.explotions = [];\n      this.enemyTimer = 0;\n      this.enemyInterval = 2000;\n      this.ammo = 20;\n      this.maxAmmo = 50;\n      this.ammoTimer = 0;\n      this.ammoInterval = 350;\n      this.gameOver = false;\n      this.score = 0;\n      this.winningScore = 100;\n      this.gameTimer = 0;\n      this.timeLimit = 30000;\n      this.speed = 1;\n      this.debug = false;\n    }\n\n    update(deltaTime) {\n      if (!this.gameOver) {\n        this.gameTimer += deltaTime;\n      }\n\n      if (this.gameTimer > this.timeLimit) {\n        this.gameOver = true;\n      }\n      this.background.update();\n      this.background.layer4.update();\n      this.player.update(deltaTime);\n\n      if (this.ammoTimer > this.ammoInterval) {\n        if (this.ammo < this.maxAmmo) {\n          this.ammo++;\n        }\n        this.ammoTimer = 0;\n      } else {\n        this.ammoTimer += deltaTime;\n      }\n      this.particles.forEach(particle => particle.update());\n\n      this.particles = this.particles.filter(particle =>\n        !particle.markedForDeletion);\n      this.explotions.forEach(explotion => explotion.update(deltaTime));\n\n      this.explotions = this.explotions.filter(explotion =>\n        !explotion.markedForDeletion);\n\n      this.enemies.forEach(enemy => {\n        enemy.update();\n\n        if (this.checkCollision(this.player, enemy)) {\n          enemy.markedForDeletion = true;\n          this.addExplosion(enemy);\n\n          for (let i = 0; i < enemy.score; i++) {\n            this.particles.push(new Particle(this,\n              enemy.x + enemy.width * 0.5, enemy.y + enemy.height * 0, 5));\n          }\n\n          if (enemy.type === 'lucky') {\n            this.player.enterPowerUp();\n          } else if (!this.gameOver) {\n            this.score--;\n          }\n        }\n\n        this.player.projectiles.forEach(projectile => {\n          if (this.checkCollision(projectile, enemy)) {\n            enemy.lives--;\n            projectile.markedForDeletion = true;\n\n            this.particles.push(new Particle(this,\n              enemy.x + enemy.width * 0.5, enemy.y + enemy.height * 0, 5));\n\n            if (enemy.lives <= 0) {\n              for (let i = 0; i < enemy.score; i++) {\n                this.particles.push(new Particle(this,\n                  enemy.x + enemy.width * 0.5, enemy.y + enemy.height * 0, 5));\n              }\n              enemy.markedForDeletion = true;\n              this.addExplosion(enemy);\n\n              if (enemy.type === 'hive') {\n                for (let i = 0; i < 5; i++) {\n                  this.enemies.push(new Drone(this,\n                    enemy.x + Math.random() * enemy.width,\n                    enemy.y + Math.random() * enemy.height * 0.5));\n                }\n              }\n              this.score += enemy.score;\n\n              if (!this.gameOver) {\n                this.score += enemy.score;\n              }\n\n              if (this.score > this.winningScore) {\n                this.gameOver = true;\n              }\n            }\n          }\n        });\n      });\n\n      this.enemies = this.enemies.filter(enemy =>\n        !enemy.markedForDeletion);\n\n      if (this.enemyTimer > this.enemyInterval && !this.gameOver) {\n        this.addEnemy();\n        this.enemyTimer = 0;\n      } else {\n        this.enemyTimer += deltaTime;\n      }\n    }\n\n    draw(context) {\n      this.background.draw(context);\n      this.ui.draw(context);\n      this.player.draw(context);\n      this.particles.forEach(particle => particle.draw(context));\n\n      this.enemies.forEach(enemy => {\n        enemy.draw(context);\n      });\n\n      this.explotions.forEach(explotion => {\n        explotion.draw(context);\n      });\n      this.background.layer4.draw(context);\n    }\n\n    addEnemy() {\n      const randomize = Math.random();\n\n      if (randomize < 0.3) {\n        this.enemies.push(new Angler1(this));\n      } else if (randomize < 0.6) {\n        this.enemies.push(new Angler2(this));\n      } else if (randomize < 0.7) {\n        this.enemies.push(new HiveWhale(this));\n      } else {\n        this.enemies.push(new LuckyFish(this));\n      }\n    }\n\n    addExplosion(enemy) {\n      const randomize = Math.random();\n\n      if (randomize < 0.5) {\n        this.explotions.push(new SmokeExplosion(this,\n          enemy.x + enemy.width * 0.5, enemy.y + enemy.height * 0.5));\n      } else {\n        this.explotions.push(new FireExplosion(this,\n          enemy.x + enemy.width * 0.5, enemy.y + enemy.height * 0.5));\n      }\n    }\n\n    checkCollision(rect1, rect2) {\n      return (rect1.x < rect2.x + rect2.width\n              && rect1.x + rect1.width > rect2.x\n              && rect1.y < rect2.y + rect2.height\n              && rect1.y + rect1.height > rect2.y);\n    }\n  }\n\n  const game = new Game(canvas.width, canvas.height);\n  let lastTime = 0;\n\n  // animation loop\n  function animate(timeStamp) {\n    const deltaTime = timeStamp - lastTime;\n\n    lastTime = timeStamp;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    game.update(deltaTime);\n    game.draw(ctx);\n    global.requestAnimationFrame(animate);\n  }\n  animate(0);\n});\n"]}